package {{ do_package }};

import java.util.List;
import java.util.Map;
import java.util.HashMap;
import com.ccb.esp.cloud.matter.data.dos.BaseMDo;
import {{ vo_entity }};
import com.ccb.cloud.log.Logger;
import com.ccb.cloud.log.LoggerFactory;
import com.ccb.openframework.exception.CommonRuntimeException;
import com.ccb.pub.ErrorCodeEnum;

public class {{ class_name }}Do extends BaseMDo<{{ class_name }}Do>{
    private Logger log = LoggerFactory.getLogger({{ class_name }}Do.class);
    
    private String {{ id }};
    {% for column in columns.keys() %}
    private String {{ columns[column][2] }};
    {% endfor %}
    
    public String get{{ '{}{}'.format(id[0].upper(),id[1:]) }}() {
        return this.{{ id }};
    }

    public void set{{ '{}{}'.format(id[0].upper(),id[1:]) }}(String {{ id }}) {
        this.{{ id }} = {{ id }};
    }
    {% for column in columns.keys() %}
    public String get{{ '{}{}'.format(columns[column][2][0].upper(),columns[column][2][1:]) }}() {
        return {{ columns[column][2] }};
    }

    public void set{{ '{}{}'.format(columns[column][2][0].upper(),columns[column][2][1:]) }}(String {{ columns[column][2] }}) {
        this.{{ columns[column][2] }} = {{ columns[column][2] }};
    }
    {% endfor %}

	public int insert{{ class_name }}() throws Exception {
        int i = 0;
        try{
            i = _dao.insertBySqlMap_mybatis("portal.{{ small_class_name }}.insert", this);
        } catch (Exception e) {
            log.error("insert {{ small_class_name }} failure, message: {}", e.getMessage());
            throw new CommonRuntimeException(null, "插入xx数据失败");
        }
        return i;
	}

    public int queryDataCount(Map<String, Object> map) throws Exception {
        int count = 0;
        try{
            count = (Integer) _dao.findObjectBySqlMap_mybatis("portal.{{ small_class_name }}.queryCount", map);
        } catch (Exception ex) {
            log.error("queryDataCount {{ small_class_name }} failure, message: {}", ex.getMessage());
            throw new CommonRuntimeException(null, "查询xx数据失败");
        }
        return count;
	}

    public List<{{ class_name }}Vo> queryDataList(Map<String, Object> map) throws Exception {
        List<{{ class_name }}Vo> list = null;
        try{
            list = (List<{{ class_name }}Vo>) _dao.findListBySqlMap_mybatis("portal.{{ small_class_name }}.queryListByMap", map);
        } catch (Exception ex) {
            log.error("queryDataList {{ small_class_name }} failure, message: {}", ex.getMessage());
            throw new CommonRuntimeException(null, "查询xx数据失败");
        }
        return list;
	}

    public {{ class_name }}Vo queryDetail(Map<String, Object> map) throws Exception {
        List<{{ class_name }}Vo> list = null;
        try{
            list = (List<{{ class_name }}Vo>) _dao.findListBySqlMap_mybatis("portal.{{ small_class_name }}.queryListByMap", map);
        } catch (Exception ex) {
            log.error("queryDetail {{ small_class_name }} failure, message: {}", ex.getMessage());
            throw new CommonRuntimeException(null, "查询xx数据失败");
        }
        return list == null || list.size() == 0 ? null : list.get(0);
	}

    public {{ class_name }}Do findById(String id) throws Exception {
        List<{{ class_name }}Do> list = null;
        try{
            Map map = new HashMap();
            map.put("{{ id }}", id);
            list = (List<{{ class_name }}Do>) _dao.findListBySqlMap_mybatis("portal.{{ small_class_name }}.findById", map);
        } catch (Exception ex) {
            log.error("findById {{ small_class_name }} failure, message: {}", ex.getMessage());
            throw new CommonRuntimeException(null, "查询xx数据失败");
        }
        return list == null || list.size() == 0 ? null : list.get(0);
	}

    public void update{{ class_name }}(Map<String, String> map) throws Exception {
        try{
            _dao.updateBySqlMap_mybatis("portal.{{ small_class_name }}.updateByMap", map);
        } catch (Exception ex) {
            log.error("update{{ class_name }} {{ small_class_name }} failure, message: {}", ex.getMessage());
            throw new CommonRuntimeException(null, "更新xx数据失败");
        }
    }
        
}
